/*
 * This file is generated by jOOQ.
 */
package com.jacobknowlton.cents.jooq.generated.tables.records


import com.jacobknowlton.cents.jooq.generated.tables.JUsers

import java.time.OffsetDateTime

import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("warnings")
open class JUsersRecord() : UpdatableRecordImpl<JUsersRecord>(JUsers.USERS) {

    open var id: Long?
        set(value): Unit = set(0, value)
        get(): Long? = get(0) as Long?

    open var firstName: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var lastName: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var passHash: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    open var email: String?
        set(value): Unit = set(4, value)
        get(): String? = get(4) as String?

    open var createdAt: OffsetDateTime?
        set(value): Unit = set(5, value)
        get(): OffsetDateTime? = get(5) as OffsetDateTime?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Long?> = super.key() as Record1<Long?>

    /**
     * Create a detached, initialised JUsersRecord
     */
    constructor(id: Long? = null, firstName: String? = null, lastName: String? = null, passHash: String? = null, email: String? = null, createdAt: OffsetDateTime? = null): this() {
        this.id = id
        this.firstName = firstName
        this.lastName = lastName
        this.passHash = passHash
        this.email = email
        this.createdAt = createdAt
        resetTouchedOnNotNull()
    }
}
