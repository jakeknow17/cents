/*
 * This file is generated by jOOQ.
 */
package com.jacobknowlton.cents.jooq.generated.tables.records


import com.jacobknowlton.cents.jooq.generated.tables.JBudgetTransaction

import java.math.BigDecimal
import java.time.LocalDate
import java.time.OffsetDateTime

import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("warnings")
open class JBudgetTransactionRecord() : UpdatableRecordImpl<JBudgetTransactionRecord>(JBudgetTransaction.BUDGET_TRANSACTION) {

    open var id: Long?
        set(value): Unit = set(0, value)
        get(): Long? = get(0) as Long?

    open var transactionDate: LocalDate?
        set(value): Unit = set(1, value)
        get(): LocalDate? = get(1) as LocalDate?

    open var amount: BigDecimal?
        set(value): Unit = set(2, value)
        get(): BigDecimal? = get(2) as BigDecimal?

    open var type: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    open var description: String?
        set(value): Unit = set(4, value)
        get(): String? = get(4) as String?

    open var notes: String?
        set(value): Unit = set(5, value)
        get(): String? = get(5) as String?

    open var budgetCategoryId: Long?
        set(value): Unit = set(6, value)
        get(): Long? = get(6) as Long?

    open var budgetVendorId: Long?
        set(value): Unit = set(7, value)
        get(): Long? = get(7) as Long?

    open var budgetAccountId: Long?
        set(value): Unit = set(8, value)
        get(): Long? = get(8) as Long?

    open var createdAt: OffsetDateTime?
        set(value): Unit = set(9, value)
        get(): OffsetDateTime? = get(9) as OffsetDateTime?

    open var updatedAt: OffsetDateTime?
        set(value): Unit = set(10, value)
        get(): OffsetDateTime? = get(10) as OffsetDateTime?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Long?> = super.key() as Record1<Long?>

    /**
     * Create a detached, initialised JBudgetTransactionRecord
     */
    constructor(id: Long? = null, transactionDate: LocalDate? = null, amount: BigDecimal? = null, type: String? = null, description: String? = null, notes: String? = null, budgetCategoryId: Long? = null, budgetVendorId: Long? = null, budgetAccountId: Long? = null, createdAt: OffsetDateTime? = null, updatedAt: OffsetDateTime? = null): this() {
        this.id = id
        this.transactionDate = transactionDate
        this.amount = amount
        this.type = type
        this.description = description
        this.notes = notes
        this.budgetCategoryId = budgetCategoryId
        this.budgetVendorId = budgetVendorId
        this.budgetAccountId = budgetAccountId
        this.createdAt = createdAt
        this.updatedAt = updatedAt
        resetTouchedOnNotNull()
    }
}
