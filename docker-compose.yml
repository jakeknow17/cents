services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: cents-postgres
    environment:
      POSTGRES_DB: cents
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d cents"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Spring Boot Backend
  backend:
    build:
      context: ./service
      dockerfile: Dockerfile
    container_name: cents-backend
    # No ports exposed - only accessible through nginx reverse proxy
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/cents
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_PROFILES_ACTIVE: docker
      # API base path for frontend
      VITE_API_BASE_URL: /api
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./service/src:/app/src
    restart: unless-stopped

  # Nginx Reverse Proxy (builds and serves frontend + proxies backend)
  nginx:
    build:
      context: .
      dockerfile: nginx/Dockerfile
    container_name: cents-nginx
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - certbot
      - backend
    volumes:
      - certbot_certs:/etc/letsencrypt
      - certbot_www:/var/www/certbot
    restart: unless-stopped

  # Certbot for automatic SSL certificate management
  certbot:
    image: certbot/certbot
    container_name: cents-certbot
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt
      - /var/lib/letsencrypt:/var/lib/certbot
    command: certonly --standalone --email knowlton.jacob17@gmail.com --agree-tos --no-eff-email -d cents.jacobknowlton.com -d www.cents.jacobknowlton.com

volumes:
  postgres_data:
  certbot_certs:
  certbot_www:
